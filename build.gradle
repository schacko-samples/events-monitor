
plugins {
  id 'org.springframework.boot' version '2.2.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'java'
  id "com.commercehub.gradle.plugin.avro" version "0.17.0"
//  id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "0.8.0"
}

ext {
  set('springCloudVersion', "Hoxton.SR1")
  set('springCloudStreamVersion', "2.2.1.RELEASE")
  set('confluentVersion', "5.4.0")
}

group = 'com.bisnode.monitoring.service.consumer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
  jcenter()

  maven {
    url 'http://packages.confluent.io/maven'
  }
}

//schemaRegistry {
//  url = 'http://localhost:8081/'
////  credentials {
////    username = 'basicauthentication-username'
////    password = 'basicauthentication-password'
////  }
//
//  register {
//    subject('monitoring-events-value', 'src/main/avro/event.avsc', 'src/main/avro/company.avsc', 'src/main/avro/details.avsc')
//  }
//
//  download {
////    subject('monitoring-events-key', 'src/main/avro')
//    subject('monitoring-events-value', 'src/main/avro/event.avsc', 'src/main/avro/company.avsc', 'src/main/avro/details.avsc')
//  }
//  compatibility {
//    subject('monitoring-events-value', 'src/main/avro/event.avsc', 'src/main/avro/company.avsc', 'src/main/avro/details.avsc')
//  }
//}

dependencies {
  // Spring
  implementation 'org.springframework.cloud:spring-cloud-stream'
  implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
  implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
  implementation "org.springframework.cloud:spring-cloud-stream-schema:${springCloudStreamVersion}"
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
  testImplementation('org.springframework.kafka:spring-kafka-test')
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'

  // Kafka
  implementation 'org.apache.kafka:kafka-streams'
  //implementation "io.confluent:kafka-schema-registry-client:${confluentVersion}"
  implementation "io.confluent:kafka-avro-serializer:${confluentVersion}"
  implementation "io.confluent:kafka-streams-avro-serde:${confluentVersion}"
  implementation "org.apache.avro:avro:1.9.1"

  // Bisnode
/*  implementation('com.bisnode.common:monitoring-library:1.0.269')  {
    exclude module: 'groovy-all'
    exclude module: 'spring-data-mongodb'
  }*/

  // Utils
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'

}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
}
