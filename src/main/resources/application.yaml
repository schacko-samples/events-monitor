spring:
  cloud:
    stream:
      default:
        producer:
          useNativeEncoding: true
        consumer:
          useNativeEncoding: true
      schemaRegistryClient:
        cached: true
        endpoint: http://localhost:8081
        schema:
          schema-locations: classpath:avro/event.avsc
      kafka:
        binder:
          brokers: localhost:9092
          producer-properties:
            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            schema.registry.url: http://localhost:8081
          consumer-properties:
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: http://localhost:8081
            specific.avro.reader: true
        bindings:
          monitoring-events-in:
            destination: monitoring-events
            content-type: application/*+avro
          #            group: monitoring
          monitoring-events-out:
            destination: monitoring-events
            content-type: application/*+avro
  application:
    name: monitoring-events-consumer
