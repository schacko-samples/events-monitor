spring:
  #  application:
  #    name: events-monitor
  kafka:
    bootstrap-servers: localhost:9092
  cloud:
    stream:
      # Activate functions aka event handlers
      function:
        definition: processEvent;handleEvent
      #        bindings:
      #          processEvent-in-0: monitoring_events_stream
      bindings:
        processEvent-in-0:
          destination: monitoring_events_in-1
        handleEvent-in-0:
          destination: monitoring_events_in-1
      kafka:
        streams:
          bindings:
            processEvent-in-0:
              consumer:
                keySerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
                valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
          binder:
            application-id: events-monitor
            configuration:
              schema.registry.url: http://localhost:8081
              commit.interval.ms: 1000
              default:
        # Kafka binder -> topics
        binder:
          producer-properties:
            key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            schema.registry.url: http://localhost:8081
            useNativeEncoding: true
          consumer-properties:
            key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            schema.registry.url: http://localhost:8081
            specific.avro.reader: true
